/*
 * test-api dev
 *
 * test api 
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A AllApiController binds http requests to an api service and writes the service results to the http response
type AllApiController struct {
	service AllApiServicer
}

// NewAllApiController creates a default api controller
func NewAllApiController(s AllApiServicer) Router {
	return &AllApiController{ service: s }
}

// Routes returns all of the api route for the AllApiController
func (c *AllApiController) Routes() Routes {
	return Routes{ 
		{
			"GetAuthers",
			strings.ToUpper("Get"),
			"/authers",
			c.GetAuthers,
		},
		{
			"GetAuthersId",
			strings.ToUpper("Get"),
			"/authers/{id}",
			c.GetAuthersId,
		},
		{
			"GetBooks",
			strings.ToUpper("Get"),
			"/books",
			c.GetBooks,
		},
		{
			"GetBooksId",
			strings.ToUpper("Get"),
			"/books/{id}",
			c.GetBooksId,
		},
		{
			"GetCategories",
			strings.ToUpper("Get"),
			"/categories",
			c.GetCategories,
		},
		{
			"GetCategoriesId",
			strings.ToUpper("Get"),
			"/categories/{id}",
			c.GetCategoriesId,
		},
		{
			"PostAuthers",
			strings.ToUpper("Post"),
			"/authers",
			c.PostAuthers,
		},
		{
			"PostBooks",
			strings.ToUpper("Post"),
			"/books",
			c.PostBooks,
		},
	}
}

// GetAuthers - Your GET endpoint
func (c *AllApiController) GetAuthers(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetAuthers()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetAuthersId - Your GET endpoint
func (c *AllApiController) GetAuthersId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetAuthersId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetBooks - Your GET endpoint
func (c *AllApiController) GetBooks(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetBooks()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetBooksId - Your GET endpoint
func (c *AllApiController) GetBooksId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetBooksId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetCategories - Your GET endpoint
func (c *AllApiController) GetCategories(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetCategories()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetCategoriesId - Your GET endpoint
func (c *AllApiController) GetCategoriesId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetCategoriesId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostAuthers - 
func (c *AllApiController) PostAuthers(w http.ResponseWriter, r *http.Request) { 
	auther := &Auther{}
	if err := json.NewDecoder(r.Body).Decode(&auther); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostAuthers(*auther)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostBooks - 
func (c *AllApiController) PostBooks(w http.ResponseWriter, r *http.Request) { 
	book := &Book{}
	if err := json.NewDecoder(r.Body).Decode(&book); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostBooks(*book)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
