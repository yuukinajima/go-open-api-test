/*
 * test-api dev
 *
 * test api 
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A AdminApiController binds http requests to an api service and writes the service results to the http response
type AdminApiController struct {
	service AdminApiServicer
}

// NewAdminApiController creates a default api controller
func NewAdminApiController(s AdminApiServicer) Router {
	return &AdminApiController{ service: s }
}

// Routes returns all of the api route for the AdminApiController
func (c *AdminApiController) Routes() Routes {
	return Routes{ 
		{
			"DeleteAuthersId",
			strings.ToUpper("Delete"),
			"/authers/{id}",
			c.DeleteAuthersId,
		},
		{
			"DeleteBooksId",
			strings.ToUpper("Delete"),
			"/books/{id}",
			c.DeleteBooksId,
		},
		{
			"DeleteCategoriesId",
			strings.ToUpper("Delete"),
			"/categories/{id}",
			c.DeleteCategoriesId,
		},
		{
			"GetBooksId",
			strings.ToUpper("Get"),
			"/books/{id}",
			c.GetBooksId,
		},
		{
			"PatchAuthersId",
			strings.ToUpper("Patch"),
			"/authers/{id}",
			c.PatchAuthersId,
		},
		{
			"PatchBooksId",
			strings.ToUpper("Patch"),
			"/books/{id}",
			c.PatchBooksId,
		},
		{
			"PatchCategoriesId",
			strings.ToUpper("Patch"),
			"/categories/{id}",
			c.PatchCategoriesId,
		},
		{
			"PostAuthers",
			strings.ToUpper("Post"),
			"/authers",
			c.PostAuthers,
		},
		{
			"PostBooks",
			strings.ToUpper("Post"),
			"/books",
			c.PostBooks,
		},
		{
			"PostCategories",
			strings.ToUpper("Post"),
			"/categories",
			c.PostCategories,
		},
	}
}

// DeleteAuthersId - 
func (c *AdminApiController) DeleteAuthersId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.DeleteAuthersId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteBooksId - 
func (c *AdminApiController) DeleteBooksId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.DeleteBooksId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// DeleteCategoriesId - 
func (c *AdminApiController) DeleteCategoriesId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.DeleteCategoriesId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// GetBooksId - Your GET endpoint
func (c *AdminApiController) GetBooksId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetBooksId(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PatchAuthersId - 
func (c *AdminApiController) PatchAuthersId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	auther := &Auther{}
	if err := json.NewDecoder(r.Body).Decode(&auther); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PatchAuthersId(id, *auther)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PatchBooksId - 
func (c *AdminApiController) PatchBooksId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	book := &Book{}
	if err := json.NewDecoder(r.Body).Decode(&book); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PatchBooksId(id, *book)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PatchCategoriesId - 
func (c *AdminApiController) PatchCategoriesId(w http.ResponseWriter, r *http.Request) { 
	params := mux.Vars(r)
	id := params["id"]
	category := &Category{}
	if err := json.NewDecoder(r.Body).Decode(&category); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PatchCategoriesId(id, *category)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostAuthers - 
func (c *AdminApiController) PostAuthers(w http.ResponseWriter, r *http.Request) { 
	auther := &Auther{}
	if err := json.NewDecoder(r.Body).Decode(&auther); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostAuthers(*auther)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostBooks - 
func (c *AdminApiController) PostBooks(w http.ResponseWriter, r *http.Request) { 
	book := &Book{}
	if err := json.NewDecoder(r.Body).Decode(&book); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostBooks(*book)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// PostCategories - 
func (c *AdminApiController) PostCategories(w http.ResponseWriter, r *http.Request) { 
	category := &Category{}
	if err := json.NewDecoder(r.Body).Decode(&category); err != nil {
		w.WriteHeader(500)
		return
	}
	
	result, err := c.service.PostCategories(*category)
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
