/*
 * test-api dev
 *
 * test api 
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"DeleteAuthersId",
		http.MethodDelete,
		"/authers/:id",
		DeleteAuthersId,
	},

	{
		"DeleteBooksId",
		http.MethodDelete,
		"/books/:id",
		DeleteBooksId,
	},

	{
		"DeleteCategoriesId",
		http.MethodDelete,
		"/categories/:id",
		DeleteCategoriesId,
	},

	{
		"GetBooksId",
		http.MethodGet,
		"/books/:id",
		GetBooksId,
	},

	{
		"PatchAuthersId",
		http.MethodPatch,
		"/authers/:id",
		PatchAuthersId,
	},

	{
		"PatchBooksId",
		http.MethodPatch,
		"/books/:id",
		PatchBooksId,
	},

	{
		"PatchCategoriesId",
		http.MethodPatch,
		"/categories/:id",
		PatchCategoriesId,
	},

	{
		"PostAuthers",
		http.MethodPost,
		"/authers",
		PostAuthers,
	},

	{
		"PostBooks",
		http.MethodPost,
		"/books",
		PostBooks,
	},

	{
		"PostCategories",
		http.MethodPost,
		"/categories",
		PostCategories,
	},

	{
		"GetAuthers",
		http.MethodGet,
		"/authers",
		GetAuthers,
	},

	{
		"GetAuthersId",
		http.MethodGet,
		"/authers/:id",
		GetAuthersId,
	},

	{
		"GetBooks",
		http.MethodGet,
		"/books",
		GetBooks,
	},

	{
		"GetBooksId",
		http.MethodGet,
		"/books/:id",
		GetBooksId,
	},

	{
		"GetCategories",
		http.MethodGet,
		"/categories",
		GetCategories,
	},

	{
		"GetCategoriesId",
		http.MethodGet,
		"/categories/:id",
		GetCategoriesId,
	},

	{
		"PostAuthers",
		http.MethodPost,
		"/authers",
		PostAuthers,
	},

	{
		"PostBooks",
		http.MethodPost,
		"/books",
		PostBooks,
	},
}
